<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.medicalsupport.mapper.PointExchangeMapper">
    
    <resultMap type="PointExchange" id="pointExchangeResultMap">
        <result column="ID" property="id" />
        <result column="memberID" property="memberID" />
        <result column="cardNo" property="cardNo" />
        <result column="productId" property="productId" />
        <result column="exchangeGift" property="exchangeGift"/>
        <result column="exchangePoints" property="exchangePoints"/>
        <result column="exchangeAmount" property="exchangeAmount"/>
        <result column="cash" property="cash"/>
        <result column="note" property="note"/>
        <result column="deptID" property="deptID"/>
        <result column="companyID" property="companyID"/>
        <result column="Creator" property="creator"/>
        <result column="CreateTime" property="createTime"/>
    </resultMap>
    
    <select id="getProductInfo" parameterType="Product" resultMap="productResultMap">
        select memberID,cardNo,exchangeGift,exchangePoints,exchangeAmount,cash,deptID,Creator,CreateTime from product where 1=1
        <if test="productName!=null and Password!=null">
            and productName = #{productName} and password=#{Password}
        </if>
    </select>
    
    <select id="queryPointExchange" parameterType="PointExchangeReqParam" resultMap="pointExchangeResultMap">
        select a.memberID,a.cardNo,exchangeGift,exchangePoints,exchangeAmount,cash,a.deptID,a.Creator,a.CreateTime from PointExchange a left join member b on a.MemberID = b.MemberID where 1=1
        <if test="memberID!=null and memberID!=''">
            and a.MemberID like CONCAT('%','${memberID}','%' )
        </if>
        <if test="memberName!=null and memberName!=''">
            and b.Name like CONCAT('%','${memberName}','%' ) 
        </if>
        <if test="cardNo!=null and cardNo!=''">
            and a.cardno like CONCAT('%','${cardNo}','%' ) 
        </if>
        <if test="idNumber!=null and idNumber!=''">
            and b.idNumber like CONCAT('%','${idNumber}','%' ) 
        </if>
    </select>
    
    <select id="totalPageCount" parameterType="PointExchangeReqParam" resultType="int">
        select count(1) from PointExchange a left join member b on a.MemberID = b.MemberID where 1=1
        <if test="memberID!=null and memberID!=''">
            and a.MemberID like CONCAT('%','${memberID}','%' )
        </if>
        <if test="memberName!=null and memberName!=''">
            and b.Name like CONCAT('%','${memberName}','%' ) 
        </if>
        <if test="cardNo!=null and cardNo!=''">
            and a.cardno like CONCAT('%','${cardNo}','%' ) 
        </if>
        <if test="idNumber!=null and idNumber!=''">
            and b.idNumber like CONCAT('%','${idNumber}','%' ) 
        </if>
    </select>
    
    <insert id="insertPointExchange" parameterType="PointExchange" useGeneratedKeys="true" keyProperty="id">
        insert into pointexchange (memberID,cardNo,productId,exchangeGift,exchangePoints,exchangeAmount,cash,note,deptID,companyID,Creator,CreateTime) 
		    values (#{memberID},#{cardNo},#{productId},#{exchangeGift},#{exchangePoints},#{exchangeAmount},#{cash},#{note},#{deptID},#{companyID},#{creator},#{createTime})
    </insert>
    
    <update id="updateProduct" parameterType="Product">
        update Product set
        productName = #{productName},
        department = #{department},
        needPoint = #{needPoint},
        needCash = #{needCash},
        creator = #{creator},
        createTime = #{createTime}
        where 
        id=#{id}
    </update>
    
    <update id="updateProductSelective" parameterType="Product">
        update Product set
        <if test="productName!=null and productName!=''" >
            productName = #{productName},
        </if>
        <if test="department!=null and department!=''" >
            department = #{department},
        </if>
        <if test="needPoint!=null and needPoint!=''" >
            needPoint = #{needPoint},
        </if>
        
        <if test="needCash!=null and needCash!=''" >
            needCash = #{needCash},
        </if>
        <if test="creator!=null and creator!=''" >
            creator = #{creator},
        </if>
        <if test="createTime!=null and createTime!=''" >
            createTime = #{createTime}
        </if>
        where 
        id=#{id}
    </update>
    
    <select id="getProductByID" parameterType="int" resultMap="productResultMap">
        select *
        from Product where id = #{id}
    </select>
    
    <delete id="deleteProducts" >
        delete from Product where
        id in
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
         #{item}
       </foreach>
    </delete>
    
    <select id="selectProductInfo" resultMap="productResultMap" parameterType="Integer">
        select *
        from Product where 1=1
        <if test="_parameter!=null and _parameter!=''" >
          and id = #{productId}
        </if>
    </select>
</mapper>