package com.medicalsupport.controller;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.ParseException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.CannotAcquireLockException;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.jdbc.UncategorizedSQLException;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.commons.CommonsMultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.google.gson.Gson;
import com.medicalsupport.entity.Admin;
import com.medicalsupport.entity.Member;
import com.medicalsupport.entity.PointInfo;
import com.medicalsupport.service.MemberService;
import com.medicalsupport.service.PointService;
import com.medicalsupport.httpentity.MemberReqParam;
import com.medicalsupport.httpentity.MemberResponseRow;
import com.medicalsupport.httpentity.MemberResponse;

@Controller
public class MemberPointsController {
	@Autowired
	PointService pointService;
	
	@RequestMapping(value = "/selectPointInfo")
	public void selectPointInfo(@RequestParam String cardNo, HttpServletResponse response)throws IOException {
		PointInfo pointInfo = pointService.queryPointInfo(cardNo);
		Gson gson = new Gson();
		String resultString = gson.toJson(pointInfo);
		String result = "{\"result\":"+resultString+"}";
		response.setCharacterEncoding("UTF-8");
		PrintWriter out = response.getWriter();
		out.write(result);
		//out.close();
	}
	
	@RequestMapping(value = "/saveRecharge", method = {RequestMethod.POST,RequestMethod.GET})
	public void saveRecharge(@RequestParam String cardNo,@RequestParam String rechargeAmount,HttpServletResponse response)throws IOException {
		PointInfo pointInfo = pointService.queryPointInfo(cardNo);
		PointInfo tempPointInfo = new PointInfo();
		BigDecimal tempAmount = new BigDecimal(rechargeAmount);
		tempAmount = tempAmount.add(pointInfo.getLeftAmount());
		tempPointInfo.setCardNo(cardNo);
		tempPointInfo.setLeftAmount(tempAmount);
		String resultMsg = "";
		String result = "";
		if(pointService.updatePointInfo(tempPointInfo)==0){
			 resultMsg = "数据更新失败，请联系管理员";
		}else{
			 resultMsg =  "数据更新成功!";
		}
		Gson gson = new Gson();
		String resultString = gson.toJson(resultMsg);
		result = "{\"result\":"+ resultString +"}";
		response.setCharacterEncoding("UTF-8");
		PrintWriter out = response.getWriter();
		out.write(resultString);
	}
	
	@RequestMapping(value = "/pointExchange", method = {RequestMethod.POST,RequestMethod.GET})
	public String pointExchange() {
		return "member/memberExchange";
	}
}
